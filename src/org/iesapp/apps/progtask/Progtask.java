/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package org.iesapp.apps.progtask;

import java.awt.MenuItem;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.net.URL;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.help.HelpSet;
import javax.help.HelpSetException;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.SwingUtilities;
import org.iesapp.framework.pluggable.TopModuleWindow;
import org.iesapp.framework.pluggable.WindowManager;
import org.iesapp.framework.util.CoreCfg;
import org.iesapp.framework.util.JarClassLoader;

/**
 *
 * @author Josep
 */
public class Progtask extends org.iesapp.framework.pluggable.DockingFrameworkApp {
    
    /**
     * Creates new form FitxesApp
     */
    public Progtask(String[] args) {
        super(args);
        this.administrativeApp = true;
        this.appNameId="ProgTask";
        this.appDisplayName="ProgTask";
        this.appDescription="Programador de Tasques";
        ImageIcon imageIcon = new ImageIcon(getClass().getResource("/org/iesapp/apps/progtask/bulb.gif"));
        this.setIconImage(imageIcon.getImage());
        this.appClass = getClass();
        
      
        
        //Create a systemTray
        stray = new org.iesapp.framework.pluggable.SysTray(this, imageIcon, "iesDigital "+CoreCfg.VERSION+": Scheduled tasks");
        this.setIconImage(imageIcon.getImage());
        stray.addActionListener(new ActionListener(){

            @Override
            public void actionPerformed(ActionEvent e) {
                Progtask.this.windowManager.setLastDisplayMode();
            }
        });
        MenuItem menuClose = new MenuItem("Tancar");
        menuClose.addActionListener(new ActionListener(){

            @Override
            public void actionPerformed(ActionEvent e) {
                Progtask.this.exitApp();
            }
        });
        
        stray.getPopupMenu().add(menuClose);
       
        
        //No required module
        //this.requiredJar = "org-iesapp-modules-reserves.jar";
        //this.requiredModuleName="/org/iesapp/modules/reserves/ReservesModule";
        initComponents();
        initializeFramework();
        this.includeHelpSet();
         
        //Add build-in module
        TopModuleWindow win = new ProgramadorModule();
        win.initialize(stamper, stray, coreCfg, uiFramework);
        win.refreshUI();
        this.uiFramework.addTopModuleWindow(win, false, false);
        
    }
    
     //Define desired window close behaviour
    @Override
    public void formWindowClosing(WindowEvent evt) {
           this.setVisible(false);
    }
   
    @Override
    public void onSwitchUserValid() {
        super.onSwitchUserValid();
        this.setVisible(false);
    }
     
   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {
    }// </editor-fold>                        
    // Variables declaration - do not modify                     
    // End of variables declaration                   


    public static void main(String[] args) {
           SwingUtilities.invokeLater(new DisplayApp(args));     
    }
     
    private static class DisplayApp implements Runnable
    {
            private final String[] args;
            public DisplayApp(String[] args)
            {
                this.args = args;
            }
            
            @Override
            public void run() {
                 Progtask app = new Progtask(args);
                 app.setVisible(true);
            }
        
    }

    
    private void includeHelpSet() {
         JarClassLoader systemClassLoader = JarClassLoader.getInstance();
         URL url = HelpSet.findHelpSet(systemClassLoader, "org/iesapp/apps/progtask/help/module.hs");
         if (url != null) {
            try {
                HelpSet helpSet = new HelpSet(systemClassLoader, url);
                coreCfg.getMainHelpSet().add(helpSet);
               
            } catch (HelpSetException ex) {
                Logger.getLogger(Progtask.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
    
    }
}
